{"version":3,"sources":["components/logo/logo.png","components/navigation/Navigation.js","components/logo/Logo.js","components/urlbar/UrlBar.js","components/Imagview/Imagview.js","components/register/Register.js","components/Signin/Signin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onClick","react_default","a","createElement","Logo","tilt_default","className","options","max","style","height","width","alt","src","logo","UrlBar","userinfo","oninputchange","onbuttonclick","concat","name","entries","type","onChange","placeholder","Imagview","imagebox","imageurl","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","register","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onnamechange","event","setState","target","value","onemailchange","email","onpasswordchange","password","onregisterclick","state","fetch","method","headers","Content-type","body","JSON","stringify","then","response","json","user","_this2","display","justifyContent","action","for","React","Component","Signin","signinemail","onpasschange","signinpass","onsignin","data","updateuser","rank","htmlFor","href","particlesparam","interactivity","events","onhover","enable","mode","app","Clarifai","App","apiKey","input","boxcreate","box","box1","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","models","predict","boxparam","catch","err","console","log","onroutechange","route","pos","userid","username","userentries","userrank","particles_default","param","components_navigation_Navigation","components_logo_Logo","components_urlbar_UrlBar","components_Imagview_Imagview","components_Signin_Signin","Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ea52af5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2b2eca7f.png\";","import React from 'react';\r\nimport './Navigation.css'\r\n\r\nconst Navigation =({onClick})=> {\r\n  return(\r\n    <div>\r\n        <nav >\r\n          <p onClick={()=>onClick('signin')}> {'SignOut'} </p>\r\n        </nav>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport logo from './logo.png'\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\n\r\nconst Logo=()=> {\r\n  return (\r\n    <Tilt className=\"Tilt\" options={{ max : 25 }} style={{ height: 250, width: 250 }} >\r\n        <div className=\"Tilt-inne\">\r\n            <img className=\"Tilt-inner\"  alt='logo' src={logo} />\r\n        </div>\r\n    </Tilt>\r\n\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport './UrlBar.css';\r\nimport 'tachyons';\r\n\r\nconst UrlBar=({userinfo,oninputchange,onbuttonclick })=>{\r\n  return (\r\n    <div  className='bar ' >\r\n        < p className='f2 b'>{`Hey ${userinfo.name} !!! your entries are ${userinfo.entries}`}</p>\r\n\r\n        <p className='f4 '>{\"Hey there!!! enter the link of the image and it will detect the faces in the photo... \"}</p>\r\n\r\n      <div className='' >\r\n        <div className='b1 pa4 ml6 mr6'>\r\n\r\n            <input  className='pa3 w-70' type='text' onChange={oninputchange} placeholder='Enter the url of photo' />\r\n            <button className=' pa3 grow w-30 pointer ' onClick={onbuttonclick}>{'Detect!!!'}</button >\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UrlBar;\r\n","import React from 'react';\r\nimport './Imagview.css';\r\nimport 'tachyons';\r\n\r\n\r\nconst Imagview=({imagebox,imageurl})=> {\r\n  return (\r\n    <div className='center tc ma4'>\r\n      <div className='absolute tc mt2'>\r\n        <img id='inputimage' className='tc'alt='' src={imageurl} />\r\n        <div className='bounding-box' style={{top: imagebox.topRow, right: imagebox.rightCol, bottom: imagebox.bottomRow, left: imagebox.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Imagview;\r\n","import React from 'react';\r\n\r\nclass register extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      name:'',\r\n      email :'',\r\n      password : '',\r\n\r\n    }\r\n  }\r\n\r\n  onnamechange=(event)=>{\r\n    this.setState({ name : event.target.value})\r\n  }\r\n  onemailchange=(event)=>{\r\n    this.setState( {email : event.target.value})\r\n  }\r\n  onpasswordchange=(event)=>{\r\n    this.setState({password : event.target.value})\r\n  }\r\n\r\n  onregisterclick=()=> {\r\n\r\n    if (this.state.name && this.state.email && this.state.password){\r\n\r\n      fetch('http://localhost:3000/register',{\r\n        method:'post',\r\n        headers: {'Content-type' :'application/json'},\r\n        body : JSON.stringify({\r\n          name: this.state.name,\r\n          email: this.state.email,\r\n          password :this.state.password\r\n        })\r\n      }).then(response=>response.json()).then(user=>{\r\n        if ( user ){\r\n          this.props.onClick('signin')\r\n        }\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  render(){\r\n\r\n    return(\r\n      <div>\r\n        <nav  >\r\n          <p style ={{display:'flex',justifyContent: 'flex-end'} }onClick={()=>{this.props.onClick('signin')}}>SignIn </p>\r\n        </nav>\r\n      <article className=\"pa4 black-80\">\r\n\r\n        <div action=\"sign-up_submit\" method=\"get\" >\r\n          <fieldset id=\"register\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"ph0 mh0 fw6 clip\">Register</legend>\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw4 lh-copy f6\" for=\"text\">Name</label>\r\n              <input className=\"pa2 input-reset ba bg-transparent w-100 measure\" onChange={this.onnamechange} type=\"name\" name=\"name\"  id=\"name\"/>\r\n            </div>\r\n\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw4 lh-copy f6\" for=\"email-address\">Email address</label>\r\n              <input className=\"pa2 input-reset ba bg-transparent w-100 measure\" type=\"email\" onChange={this.onemailchange} name=\"email-address\"  id=\"email-address\"/>\r\n            </div>\r\n            <div className=\"mt3\">\r\n              <label className=\"db fw4 lh-copy f6\" for=\"password\">Password</label>\r\n              <input className=\"b pa2 input-reset ba bg-transparent\" type=\"password\" name=\"password\" onChange={this.onpasswordchange}  id=\"password\"/>\r\n            </div>\r\n          </fieldset>\r\n          <div className=\"mt3\">\r\n          <button onClick={this.onregisterclick} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\" type=\"\" > Register\r\n          </button>\r\n          </div>\r\n        </div>\r\n      </article>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default register;\r\n","import React from 'react';\r\n\r\nclass Signin extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state={\r\n      signinemail : '',\r\n      signinpass : ''\r\n    }\r\n\r\n  }\r\n\r\n  onemailchange=(event)=>\r\n  {\r\n    this.setState({signinemail:event.target.value})\r\n  }\r\n  onpasschange=(event)=>\r\n  {\r\n    this.setState({signinpass:event.target.value})\r\n  }\r\n\r\n  onsignin=()=>{\r\n    if( this.state.signinemail&& this.state.signinpass ){\r\n\r\n      fetch('http://localhost:3000/signin',{\r\n        method:'post',\r\n        headers: {'Content-type' :'application/json'},\r\n        body : JSON.stringify({\r\n          email: this.state.signinemail,\r\n          password : this.state.signinpass\r\n        })\r\n      }).then(response=>response.json()).then(data=>{\r\n\r\n        if (data.name ){\r\n          this.props.updateuser(data.id,data.name,data.entries,data.rank)\r\n          this.props.onClick('home')\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  render(){\r\n    const {onClick} = this.props;\r\n    return (\r\n      <main className=\"pa4 black-80\">\r\n          <div className=\"measure center\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" onChange={this.onemailchange}  id=\"email-address\"/>\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                <input className=\" pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  onChange={this.onpasschange} id=\"password\"/>\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input className=\" ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" onClick={this.onsignin} value=\"Sign in\"/>\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <a href=\"#0\"  onClick={()=>onClick(onClick)} className=\"f6 link dim black db\">Register</a>\r\n            </div>\r\n          </div>\r\n        </main>\r\n    );\r\n}}\r\n\r\nexport default Signin;\r\n","import React ,{Component}from 'react';\nimport Navigation from './components/navigation/Navigation'\nimport Logo from './components/logo/Logo';\nimport UrlBar from './components/urlbar/UrlBar'\nimport Imagview from './components/Imagview/Imagview';\nimport Register from './components/register/Register';\nimport Signin from './components/Signin/Signin'\n\nimport Clarifai from 'clarifai';\nimport './App.css';\nimport Particles from 'react-particles-js';\nconst particlesparam={\n            interactivity: {\n               events: {\n                   onhover: {\n                       enable: true,\n                       mode: 'repulse'\n                   }}}\n   }\n\nconst app = new Clarifai.App({\n  apiKey: '2decd50a7ada419193927f9b5e0adb5f'\n    });\n\nclass App extends Component{\n    constructor(){\n      super();\n      this.state={\n        input: '',\n        imageurl:'',\n        boxparam:{},\n        pos:'signin',\n        id:0,\n        name : '',\n\n        entries : 0\n      }\n    }\n\n    oninputchange =(events)=>{\n      this.setState({input:events.target.value});\n    }\n\n    boxcreate=(box)=>\n    {\n      const box1=box.outputs[0].data.regions[0].region_info.bounding_box;\n      const image= document.getElementById('inputimage');\n\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: box1.left_col * width +200,\n        topRow: box1.top_row * height ,\n        rightCol: width - (box1.right_col * width)+200 ,\n        bottomRow: height - (box1.bottom_row * height)\n      }\n    }\n\n    onbuttonclick=()=>{\n      app.models.predict(\"a403429f2ddf4b49b307e318f00e528b\", this.state.input)\n          .then(response => {\n            if(response){\n              fetch(\"http://localhost:3000/image\",{\n                            method:'put',\n                            headers: {'Content-type' :'application/json'},\n                            body : JSON.stringify({\n                              id:this.state.id\n                            })})\n                              .then(response =>response.json())\n                                .then(entries=>{this.setState({entries:entries})});\n              this.setState({boxparam:this.boxcreate(response)});\n\n            }})\n          .catch(err => {\n            console.log(err);\n          });\n\n          this.setState({imageurl:this.state.input})\n    }\n\n    onroutechange=(route)=>\n    {\n      this.setState({pos:route})\n    }\n\n    updateuser=(userid,username,userentries,userrank)=>{\n    \tthis.setState({\n        id: userid,\n    \t\tname: username,\n    \t\tentries: userentries,\n    \t\trank : userrank\n    \t})\n\t}\n\n\n\n    render(){\n        return (\n          <div>\n            <Particles className= 'Particles' param={particlesparam}/>\n            {this.state.pos ==='home'?\n                  <div>\n                    <Navigation  onClick={this.onroutechange}/>\n                    <Logo/>\n                    <UrlBar userinfo={this.state}  oninputchange={this.oninputchange} onbuttonclick={this.onbuttonclick}/>\n                    <Imagview imagebox={this.state.boxparam} imageurl={this.state.imageurl}/>\n                  </div>:\n                  (this.state.pos==='signin'?\n                    <div>\n                        <Signin updateuser={this.updateuser} onClick={this.onroutechange}/>\n                      </div>:\n                        <Register onClick={this.onroutechange}/>\n                  )\n            }\n\n          </div>\n        );\n      }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}